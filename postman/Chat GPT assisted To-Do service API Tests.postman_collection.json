{
	"info": {
		"_postman_id": "a89565d7-fe51-49d9-890f-987818680970",
		"name": "Chat GPT assisted To-Do service API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6224726"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "Get a user by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Request was successful.\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Correct user returned.\", function () {\r",
											"    let responseData = pm.response.json();\r",
											"    pm.expect(responseData.id).to.eql(parseInt(pm.collectionVariables.get(\"get_user_id\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/{{get_user_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"{{get_user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"last_name\": \"Smith\",\n    \"first_name\": \"Ferdinand\",\n    \"email\": \"f.smith@example.com\",\n    \"id\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Update a property of a user (excluding ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Request was successful.\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Correct change made.\", function () {\r",
											"    let responseData = pm.response.json();\r",
											"    pm.expect(responseData.email).to.eql(pm.collectionVariables.get(\"patch_user_data\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{patch_user_data}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/{{patch_user_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"{{patch_user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "User updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"example\": {\n    \"email\": \"new.email@example.com\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"last_name\": \"Smith\",\n    \"first_name\": \"Ferdinand\",\n    \"email\": \"new.email@example.com\",\n    \"id\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Delete a user by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Request was successful.\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/{{delete_user_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"{{delete_user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "User deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request was successful.\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has enough objects.\", function() {\r",
									"    let responseData = pm.response.json();\r",
									"    pm.expect(responseData.length).to.be.gte(3);\r",
									"    console.log(\"users: \" + responseData.length );\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"users\": [\n      {\n        \"last_name\": \"Smith\",\n        \"first_name\": \"Ferdinand\",\n        \"email\": \"f.smith@example.com\",\n        \"id\": 1\n      },\n      {\n        \"last_name\": \"Jones\",\n        \"first_name\": \"Jill\",\n        \"email\": \"j.jones@example.com\",\n        \"id\": 2\n      },\n      {\n        \"last_name\": \"Martinez\",\n        \"first_name\": \"Marty\",\n        \"email\": \"m.martinez@example.com\",\n        \"id\": 3\n      },\n      {\n        \"last_name\": \"Bailey\",\n        \"first_name\": \"Bill\",\n        \"email\": \"b.bailey@example.com\",\n        \"id\": 4\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Add a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request was successful.\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"New object is correct.\", function() {\r",
									"    let responseData = pm.response.json();\r",
									"    pm.expect(responseData.last_name).to.eql(pm.collectionVariables.get(\"post_user_data\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"last_name\": \"{{post_user_data}}\",\n    \"first_name\": \"John\",\n    \"email\": \"j.doe@example.com\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "User added successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"example\": {\n    \"last_name\": \"Doe\",\n    \"first_name\": \"John\",\n    \"email\": \"j.doe@example.com\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"id\": 5,\n    \"last_name\": \"Doe\",\n    \"first_name\": \"John\",\n    \"email\": \"j.doe@example.com\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "{taskId}",
					"item": [
						{
							"name": "Get a task by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{get_task_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{get_task_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tasks/:taskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"user_id\": 1,\n    \"title\": \"Grocery shopping\",\n    \"description\": \"eggs, bacon, gummy bears\",\n    \"due_date\": \"2024-02-20T17:00\",\n    \"warning\": \"-10\",\n    \"id\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Update a property of a task (excluding ID)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"example\": {\n    \"description\": \"Updated description\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/{{patch_task_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{patch_task_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Task updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"example\": {\n    \"description\": \"Updated description\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tasks/:taskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"user_id\": 1,\n    \"title\": \"Grocery shopping\",\n    \"description\": \"Updated description\",\n    \"due_date\": \"2024-02-20T17:00\",\n    \"warning\": \"-10\",\n    \"id\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Delete a task by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{delete_task_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{delete_task_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Task deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tasks/:taskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"tasks\": [\n      {\n        \"user_id\": 1,\n        \"title\": \"Grocery shopping\",\n        \"description\": \"eggs, bacon, gummy bears\",\n        \"due_date\": \"2024-02-20T17:00\",\n        \"warning\": \"-10\",\n        \"id\": 1\n      },\n      {\n        \"user_id\": 1,\n        \"title\": \"Piano recital\",\n        \"description\": \"Daughter's first concert appearance\",\n        \"due_date\": \"2024-04-02T15:00\",\n        \"warning\": \"-30\",\n        \"id\": 2\n      },\n      {\n        \"user_id\": 2,\n        \"title\": \"Oil change\",\n        \"description\": \"5K auto service\",\n        \"due_date\": \"2024-03-10T09:00\",\n        \"warning\": \"-60\",\n        \"id\": 3\n      },\n      {\n        \"user_id\": 3,\n        \"title\": \"Get shots for dog\",\n        \"description\": \"Annual vaccinations for poochy\",\n        \"due_date\": \"2024-05-11T14:00\",\n        \"warning\": \"-20\",\n        \"id\": 4\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Add a task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"user_id\": 1,\n    \"title\": \"New Task\",\n    \"description\": \"Description of the new task\",\n    \"due_date\": \"2024-06-01T12:00\",\n    \"warning\": \"-5\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "Task added successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"example\": {\n    \"user_id\": 1,\n    \"title\": \"New Task\",\n    \"description\": \"Description of the new task\",\n    \"due_date\": \"2024-06-01T12:00\",\n    \"warning\": \"-5\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"id\": 5,\n    \"user_id\": 1,\n    \"title\": \"New Task\",\n    \"description\": \"Description of the new task\",\n    \"due_date\": \"2024-06-01T12:00\",\n    \"warning\": \"-5\"\n  }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		},
		{
			"key": "get_user_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "patch_user_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "patch_user_data",
			"value": "0",
			"type": "string"
		},
		{
			"key": "delete_user_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "post_user_data",
			"value": "0",
			"type": "string"
		},
		{
			"key": "get_task_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "patch_task_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "delete_task_id",
			"value": "0",
			"type": "string"
		},
		{
			"key": "patch_task_data",
			"value": "0",
			"type": "string"
		},
		{
			"key": "post_task_data",
			"value": "0",
			"type": "string"
		}
	]
}